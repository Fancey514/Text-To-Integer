// Goal is to take a value written out and convert it to an integer

import java.util.StringTokenizer;
import java.util.Scanner;

public class Main {
  static String[] textArray = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", 
      "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty", "thirty", 
      "forty", "fifty", "sixty", "seventy", "eighty", "ninety", "hundred", "thousand", "million", "billion"};
  static String[] numericalArray = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", 
      "16", "17", "18", "19", "20", "30", "40", "50", "60", "70", "80-", "90", "00", ",", ",", ","};
  static String inputText, appendText, temp, tempVerify, previousZero = "N/A", errorMessage, previousVerify;
  static int i = 0;
  static boolean removeZero = true, continueConvert = true;
  
  
  public static void main(String args[]) {
    StringBuilder  outputText = new StringBuilder("");
    Scanner inText = new Scanner(System.in);
    System.out.println("Please type a number.");
    inputText = inText.nextLine();
    inputText = inputText.toLowerCase();
    
    StringTokenizer verifyToken = new StringTokenizer(inputText, " ");
    while (verifyToken.hasMoreTokens()) {
        boolean numFound = false;
        tempVerify = verifyToken.nextToken();
        for (int l = 0; l < textArray.length; l++) {
            if (tempVerify.equals(textArray[l])) {
                numFound = true;
            }
            if (l < 27 && (tempVerify.equals(textArray[l]) && tempVerify.equals(previousVerify))) {
                errorMessage = "A triple zero value was duplicated.";
                continueConvert = false;
                
            }
        }
        if (!numFound) {
            errorMessage = "The number you typed is not valid";
            continueConvert = false;
        }
        if (!continueConvert) {
            break;
        }
        previousVerify = tempVerify;
    }
    
    if (continueConvert) {
        StringTokenizer newToken = new StringTokenizer(inputText, " ");
        while (newToken.hasMoreTokens()) {
            i++;
            temp = newToken.nextToken();
            if (!previousZero.equals("N/A")) {
                if (previousZero.equals("00")) {
                    int j = 0, loopNum = 0;
                    while (loopNum == 0) {
                        if (temp.equals(textArray[j])) {
                            if (j < 9) {
                                previousZero = "N/A";
                                if (newToken.hasMoreTokens()) {
                                    removeZero = doubleOAfter(i);
                                    if (removeZero) {
                                        outputText.delete(outputText.length() - 1, outputText.length());
                                    }
                                }
                            }
                            else if (j > 8 && j < 27) {
                                if (j == 9 || j > 18) {
                                    previousZero = numericalArray[j];
                                }
                                outputText.delete(outputText.length() - 2, outputText.length());
                            }
                            else if (j > 27) {
                                previousZero = numericalArray[j];
                            }
                            temp = numericalArray[j];
                            loopNum++;
                        }
                        j++;
                    }
                }
                else if (previousZero.equals(",")) {
                    int j = 0, loopNum = 0;
                    while (loopNum == 0) {
                        if (temp.equals(textArray[j])) {
                            if (j < 9) {
                                previousZero = "N/A";
                                if (newToken.hasMoreTokens()) {
                                    removeZero = doubleOAfter(i);
                                    if (!removeZero) {
                                        outputText.append("00");
                                    }
                                }
                            }
                            else if (j > 8 && j < 27) {
                                if (j == 9 || j < 18) {
                                    previousZero = numericalArray[j];
                                }
                                outputText.append("0");
                            }
                            temp = numericalArray[j];
                            loopNum++;
                        }
                        j++;
                    }
                }
                else {
                    if (newToken.hasMoreTokens() && (!temp.equals("thousand") || !temp.equals("million") || !temp.equals("billion"))) {
                        removeZero = doubleOAfter(i);
                    }
                    if (!temp.equals("thousand") || !temp.equals("million") || !temp.equals("billion")) {  
                        if (removeZero) {
                            outputText.delete(outputText.length() - 1, outputText.length());
                        }
                    }
                    int loopNum = 0, j = 0;
                    while (loopNum == 0) {
                        if (temp.equals(textArray[j])) {
                            temp = numericalArray[j];
                            if (j > 8) {
                                previousZero = temp;
                            }
                            loopNum++;
                        }
                        j++;
                    }
                }
            }
            else {
                int loopNum = 0, j = 0;
                while (loopNum == 0) {
                    if (temp.equals(textArray[j])) {
                        temp = numericalArray[j];
                        if  (j == 9 || j > 18 && j < 28) {
                            previousZero = temp;
                        }
                        loopNum++;
                    }
                    j++;
                }
            }
            outputText.append(temp);
    
        }
    
        System.out.println(outputText);
    }
    else {
        System.out.println(errorMessage);
    }
  }
  
    public static boolean doubleOAfter(int i) {
        StringTokenizer doubleO = new StringTokenizer(inputText, " ");
        String doubleTemp = "";
        for (int k = 0; k <= i + 1; k++) {
            doubleTemp = doubleO.nextToken();
        }
        if (doubleTemp.equals("hundred")) {
            removeZero = false;
        }
        else {
            removeZero = true;
        }
        return removeZero;
    }
}
